<div
  class="product-recommendations"
  data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=4&intent=related"
>
  {%- if recommendations.performed? and recommendations.products_count > 0 -%}
    {% if recommendations.intent == 'related' %}
      <h2>you may also like</h2>
    {% elsif recommendations.intent == 'complementary' %}
     <h2>yoy may also like</h2>
    {% endif %}

    <div style="display: flex;">
      {%- for samePrintProducts in recommendations.products limit: 4 -%}
        <div class="recommended-product__container">
          <a href="{{ samePrintProducts.url }}">
            <img
            class="product__img"
            src="{{ samePrintProducts.featured_image | image_url: width: 300, height: 300 }}"
            alt="{{ samePrintProducts.featured_image.alt }}"
            />

           {% assign productType = product.type %}
           {% assign productPrint = product.title | remove: productType %}
            <p class="product__title">{{ samePrintProducts.title | remove: productPrint }}</p>
            <p class="product__price">{{ samePrintProducts.price | money}}</p>
          </a>

        {% capture product_data_attribute %}data-oke-reviews-product-id="shopify-{{ product.id }}"{% endcapture %}
                 
          {% if product.metafields.okendo.summaryData.reviewCount > 0 %}
          <div data-oke-star-rating {{ product_data_attribute }}>
            {{ product.metafields.okendo.StarRatingSnippet }}
          </div>
          {% endif %}

          {% if samePrintProducts.available and samePrintProducts.variants.size == 1 %}
          <div
           class="product-section"
           data-section-id="{{product.id}}"
           data-section-type="product-template"
           data-product-handle="{{ samePrintProducts.handle }}"
           data-product-url="{{ samePrintProducts.url }}">
             <div class="product-grid-item_form_wrapper">
               {% render 'dtc-product-single-product', section_id: section_id, samePrintProducts: samePrintProducts, quick-add__btn: quick-add__btn %}
             </div>
           </div>    
         {% endif %}
 
         <div class="quick-add-product {% if product.variants.size == 1 %}mobile-only{% endif %}">
           {% unless samePrintProducts.variants[0].option1 == 'Default Title' or samePrintProducts.available == false %}
             <div 
               class="quick-add__btn hover-to-show-form"
               style="{%if sold_out %} pointer-events: none; opacity:0.3;{% endif %}
               {% if samePrintProducts.variants[0].option1 == 'Default Title' %} display: none !important; {% endif %}
               ">
                 QUICK ADD
             </div>
           {% endunless %}
     
           <div class="quick-add-form">
             <div
               class="product-section"
               data-section-id="{{ samePrintProducts.id}}"
               data-section-type="samePrintProducts-template"
               data-product-handle="{{ samePrintProducts.handle }}"
               data-product-url="{{ samePrintProducts.url }}">
               <div class="product-grid-item_form_wrapper" style="">
                 {% assign section_id = samePrintProducts.id | append: '_product-grid' %}
                 {% render 'product-form-dtc', section_id: section_id, samePrintProducts: samePrintProducts %}
               </div>
             </div>
           </div>
         </div>
        </div>
      {%- endfor -%}
    </div>
  {%- endif -%}
</div>

<script>
  const handleIntersection = (entries, observer) => {
    if (!entries[0].isIntersecting) return;

    observer.unobserve(productRecommendationsSection);

    const url = productRecommendationsSection.dataset.url;

    fetch(url)
      .then(response => response.text())
      .then(text => {
        const html = document.createElement('div');
        html.innerHTML = text;
        const recommendations = html.querySelector('.product-recommendations');

        if (recommendations && recommendations.innerHTML.trim().length) {
          productRecommendationsSection.innerHTML = recommendations.innerHTML;
        }
      })
      .catch(e => {
        console.error(e);
      });
  };

  const productRecommendationsSection = document.querySelector('.product-recommendations');
  const observer = new IntersectionObserver(handleIntersection, {rootMargin: '0px 0px 200px 0px'});

  observer.observe(productRecommendationsSection);
  </script>